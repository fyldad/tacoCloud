spring:
  data:
    rest:
      base-path: /data-api
  artemis:
    user: andrey
    password: 123
  jms:
    template:
      default-destination: ${queue.name}
  rabbitmq:
    template:
      routing-key: ${queue.name}
      default-receive-queue: ${queue.name}
#      exchange: kitchens.central
    port: 5555
  kafka:
    template:
      default-topic: ${queue.name}
    producer:
      value-serializer: com.example.test.config.messaging.KafkaOrderSerializer
    consumer:
      group-id: kitchens.central
      value-deserializer: com.example.test.config.messaging.KafkaOrderDeserializer
  security:
    oauth2:
      client:
        registration:
          taco-admin-client:
            provider: tacocloud
            client-id: taco-admin-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: http://127.0.0.1:9090/login/oauth2/code/{registrationId}
            scope:
              - writeIngredients
              - deleteIngredients
              - openid
        provider:
          tacocloud:
            issuer-uri: http://authserver:9000
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:9000/oauth2/jwks

server:
  port: 8443
  ssl:
    key-store: classpath:keystore.jks
    key-password: password
    key-store-password: password

queue:
  name: tacoCloud.order.queue

logging:
  file:
    path: C:\Users\WebUser\Documents\tempFiles
    name: tacoCloud.log

taco:
  orders:
    pageSize: 5